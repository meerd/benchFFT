# This Makefile is included by all benchmark programs
noinst_PROGRAMS=$(PRG)

LIBBENCH=${top_builddir}/libbench/libbench.a
INCLBENCH=-I${top_srcdir}/libbench

MAXN=262144
MAXND=2097152
BENCHMARK=$(SHELL) ${top_srcdir}/scripts/benchmark --maxn=$(MAXN) --maxnd=$(MAXND) $(BENCHMARK_USEROPT) $(BENCHMARK_FLAGS) 
WRITEINFO=$(SHELL) ${top_srcdir}/scripts/writeinfo

if SINGLE
PRECISION=single
else
PRECISION=double
endif

# extract TARFILE
extract: $(TARFILE)
	(@GZIP@ -dc ${srcdir}/$(TARFILE) | @TAR@ xf -) && \
	echo timestamp >$@

# extract TARFILE in PKG directory
extract-mkdir: $(TARFILE)
	@MKDIR@ $(PKG) && \
        @GZIP@ -dc ${srcdir}/$(TARFILE) | (cd $(PKG); @TAR@ xf -) && \
	echo timestamp >$@

distclean-local:
	rm -rf extract extract-mkdir $(PKG) $(LOCAL_COPIES)
	rm -rf benchmark accuracy *.info *.speed *.accuracy

clean-local::
	rm -rf benchmark accuracy $(LOCAL_COPIES)

check-local: $(PRG)
	test -z "$(PRG)" || (for prog in `echo $(PRG)`; do	\
	  test ! -x $$prog || {					\
	  echo "Testing $$prog";				\
	  $(BENCHMARK) --verify-only `pwd`/$$prog || exit 1; }	\
	done)

fftinfo: $(PRG)
	test -z "$(PRG)" || (for prog in `echo $(PRG)`; do	\
	  test ! -x $$prog || {					\
	  echo "Querying $$prog";				\
	  time_min=`./$$prog --print-time-min`;			\
	  $(WRITEINFO) --time-min $$time_min `pwd`/$$prog  |	\
           tee $$prog.$(PRECISION).info; }			\
	done)
	echo done >$@

benchmark: $(PRG)
	test -z "$(PRG)" || (for prog in `echo $(PRG)`; do	\
	  test ! -x $$prog || {					\
	  echo "Benchmarking $$prog";				\
	  time_min=`./$$prog --print-time-min`;			\
	  $(WRITEINFO) --time-min $$time_min `pwd`/$$prog  |	\
           tee $$prog.$(PRECISION).info;			\
	  ($(BENCHMARK) --time-min $$time_min `pwd`/$$prog  |	\
           tee $$prog.$(PRECISION).speed); }			\
	done)
	echo done >$@

accuracy: $(PRG)
	test -z "$(PRG)" || (for prog in `echo $(PRG)`; do	\
	  test ! -x $$prog || {					\
	  echo "Benchmarking $$prog";				\
	  time_min=`./$$prog --print-time-min`;			\
	  ($(BENCHMARK) --accuracy `pwd`/$$prog  |              \
	    tee $$prog.$(PRECISION).accuracy); }                \
	done)
	echo done >$@
