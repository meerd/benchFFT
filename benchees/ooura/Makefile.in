# Makefile.in generated by automake 1.7.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
ALTIVEC_ABIFLAGS = @ALTIVEC_ABIFLAGS@
ALTIVEC_CFLAGS = @ALTIVEC_CFLAGS@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CP = @CP@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOUBLE_FALSE = @DOUBLE_FALSE@
DOUBLE_TRUE = @DOUBLE_TRUE@
DXML_LIB = @DXML_LIB@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
F77_CMAIN_FFLAGS = @F77_CMAIN_FFLAGS@
F90 = @F90@
F90FLAGS = @F90FLAGS@
F90LIBS = @F90LIBS@
FFLAGS = @FFLAGS@
FLIBS = @FLIBS@
GZIP = @GZIP@
HAVE_ACML_FALSE = @HAVE_ACML_FALSE@
HAVE_ACML_TRUE = @HAVE_ACML_TRUE@
HAVE_CXX_FALSE = @HAVE_CXX_FALSE@
HAVE_CXX_TRUE = @HAVE_CXX_TRUE@
HAVE_DXML_FALSE = @HAVE_DXML_FALSE@
HAVE_DXML_TRUE = @HAVE_DXML_TRUE@
HAVE_ESSL_FALSE = @HAVE_ESSL_FALSE@
HAVE_ESSL_TRUE = @HAVE_ESSL_TRUE@
HAVE_F77_FALSE = @HAVE_F77_FALSE@
HAVE_F77_TRUE = @HAVE_F77_TRUE@
HAVE_F90_FALSE = @HAVE_F90_FALSE@
HAVE_F90_TRUE = @HAVE_F90_TRUE@
HAVE_FFTW2_FALSE = @HAVE_FFTW2_FALSE@
HAVE_FFTW2_TRUE = @HAVE_FFTW2_TRUE@
HAVE_FFTW3F_FALSE = @HAVE_FFTW3F_FALSE@
HAVE_FFTW3F_TRUE = @HAVE_FFTW3F_TRUE@
HAVE_FFTW3_FALSE = @HAVE_FFTW3_FALSE@
HAVE_FFTW3_TRUE = @HAVE_FFTW3_TRUE@
HAVE_GSL_FALSE = @HAVE_GSL_FALSE@
HAVE_GSL_TRUE = @HAVE_GSL_TRUE@
HAVE_IMSL_FALSE = @HAVE_IMSL_FALSE@
HAVE_IMSL_TRUE = @HAVE_IMSL_TRUE@
HAVE_IPPS64_FALSE = @HAVE_IPPS64_FALSE@
HAVE_IPPS64_TRUE = @HAVE_IPPS64_TRUE@
HAVE_IPPS_FALSE = @HAVE_IPPS_FALSE@
HAVE_IPPS_TRUE = @HAVE_IPPS_TRUE@
HAVE_MKL_DFTI_FALSE = @HAVE_MKL_DFTI_FALSE@
HAVE_MKL_DFTI_TRUE = @HAVE_MKL_DFTI_TRUE@
HAVE_MKL_FALSE = @HAVE_MKL_FALSE@
HAVE_MKL_TRUE = @HAVE_MKL_TRUE@
HAVE_NAG_FALSE = @HAVE_NAG_FALSE@
HAVE_NAG_TRUE = @HAVE_NAG_TRUE@
HAVE_PFFTW_ARCH_FALSE = @HAVE_PFFTW_ARCH_FALSE@
HAVE_PFFTW_ARCH_TRUE = @HAVE_PFFTW_ARCH_TRUE@
HAVE_SFFTW2_FALSE = @HAVE_SFFTW2_FALSE@
HAVE_SFFTW2_TRUE = @HAVE_SFFTW2_TRUE@
HAVE_SGIMATH_FALSE = @HAVE_SGIMATH_FALSE@
HAVE_SGIMATH_TRUE = @HAVE_SGIMATH_TRUE@
HAVE_SUNPERF_FALSE = @HAVE_SUNPERF_FALSE@
HAVE_SUNPERF_TRUE = @HAVE_SUNPERF_TRUE@
HAVE_VDSP_FALSE = @HAVE_VDSP_FALSE@
HAVE_VDSP_TRUE = @HAVE_VDSP_TRUE@
INFO_ONLY_FALSE = @INFO_ONLY_FALSE@
INFO_ONLY_TRUE = @INFO_ONLY_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LFFTW = @LFFTW@
LFFTW3 = @LFFTW3@
LFFTW3F = @LFFTW3F@
LIBIMSL = @LIBIMSL@
LIBNAG = @LIBNAG@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LN_S = @LN_S@
LSFFTW = @LSFFTW@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR = @MKDIR@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATCH = @PATCH@
PATH_SEPARATOR = @PATH_SEPARATOR@
PFFTW_ARCH = @PFFTW_ARCH@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SINGLE_FALSE = @SINGLE_FALSE@
SINGLE_TRUE = @SINGLE_TRUE@
STRIP = @STRIP@
TAR = @TAR@
TR = @TR@
VECLIB = @VECLIB@
VERSION = @VERSION@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
PKG = fft
TARFILE = $(PKG).tgz
PKG2 = fft2d
TARFILE2 = $(PKG2).tgz

@DOUBLE_TRUE@@HAVE_F77_TRUE@FORTRAN_PRG = doit_8gf doit_4gf doit_sgf doit_sg2df doit_4f2df doit_sg3df
@DOUBLE_TRUE@@HAVE_F77_TRUE@FORTRAN_LIBS = lib8gf.a lib4gf.a libsgf.a libsg2df.a lib4f2df.a libsg3df.a
@DOUBLE_TRUE@@HAVE_F77_TRUE@LOCAL_COPIES = fft4gf.f fft8gf.f fftsgf.f fftsg2df.f fft4f2df.f fftsg3df.f extract2 $(PKG2)
@DOUBLE_FALSE@LOCAL_COPIES = extract2 $(PKG2)
@DOUBLE_TRUE@@HAVE_F77_FALSE@LOCAL_COPIES = extract2 $(PKG2)

PRG = doit_sg doit_8g doit_4g doit_sg2d doit_4f2d doit_sg3d $(FORTRAN_PRG)
INCLUDES = $(INCLBENCH)
EXTRA_DIST = $(TARFILE) $(TARFILE2) doit.c doit-doc.h doit2d.c doit3d.c
noinst_LIBRARIES = $(FORTRAN_LIBS)

doit_sg_SOURCES = doit_sg.c
nodist_doit_sg_SOURCES = $(PKG)/fftsg.c
doit_sg_LDADD = $(LIBBENCH)

doit_8g_SOURCES = doit_8g.c
nodist_doit_8g_SOURCES = $(PKG)/fft8g.c
doit_8g_LDADD = $(LIBBENCH)

doit_4g_SOURCES = doit_4g.c
nodist_doit_4g_SOURCES = $(PKG)/fft4g.c
doit_4g_LDADD = $(LIBBENCH)

doit_sgf_SOURCES = doit_sgf.c
nodist_libsgf_a_SOURCES = fftsgf.f
doit_sgf_LDADD = libsgf.a $(LIBBENCH) @FLIBS@

doit_8gf_SOURCES = doit_8gf.c
nodist_lib8gf_a_SOURCES = fft8gf.f
doit_8gf_LDADD = lib8gf.a $(LIBBENCH) @FLIBS@

doit_4gf_SOURCES = doit_4gf.c
nodist_lib4gf_a_SOURCES = fft4gf.f
doit_4gf_LDADD = lib4gf.a $(LIBBENCH) @FLIBS@

doit_sg2d_SOURCES = doit_sg2d.c
nodist_doit_sg2d_SOURCES = $(PKG)/fftsg.c $(PKG2)/fftsg2d.c
doit_sg2d_LDADD = $(LIBBENCH)

doit_sg2df_SOURCES = doit_sg2df.c
nodist_libsg2df_a_SOURCES = fftsgf.f fftsg2df.f
doit_sg2df_LDADD = libsg2df.a $(LIBBENCH) @FLIBS@

doit_4f2d_SOURCES = doit_4f2d.c
nodist_doit_4f2d_SOURCES = $(PKG2)/fft4f2d.c
doit_4f2d_LDADD = $(LIBBENCH)

doit_4f2df_SOURCES = doit_4f2df.c
nodist_lib4f2df_a_SOURCES = fft4f2df.f
doit_4f2df_LDADD = lib4f2df.a $(LIBBENCH) @FLIBS@

doit_sg3d_SOURCES = doit_sg3d.c
nodist_doit_sg3d_SOURCES = $(PKG)/fftsg.c $(PKG2)/fftsg3d.c
doit_sg3d_LDADD = $(LIBBENCH)

doit_sg3df_SOURCES = doit_sg3df.c
nodist_libsg3df_a_SOURCES = fftsgf.f fftsg3df.f
doit_sg3df_LDADD = libsg3df.a $(LIBBENCH) @FLIBS@

# This Makefile is included by all benchmark programs
noinst_PROGRAMS = $(PRG)

LIBBENCH = ${top_builddir}/libbench/libbench.a
INCLBENCH = -I${top_srcdir}/libbench

MAXN = 262144
MAXND = 2097152
BENCHMARK = $(SHELL) ${top_srcdir}/scripts/benchmark --maxn=$(MAXN) --maxnd=$(MAXND) $(BENCHMARK_USEROPT) $(BENCHMARK_FLAGS) 
WRITEINFO = $(SHELL) ${top_srcdir}/scripts/writeinfo
@SINGLE_FALSE@PRECISION = double

@SINGLE_TRUE@PRECISION = single
subdir = benchees/ooura
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)

lib4f2df_a_AR = $(AR) cru
lib4f2df_a_LIBADD =
nodist_lib4f2df_a_OBJECTS = fft4f2df.$(OBJEXT)
lib4f2df_a_OBJECTS = $(nodist_lib4f2df_a_OBJECTS)
lib4gf_a_AR = $(AR) cru
lib4gf_a_LIBADD =
nodist_lib4gf_a_OBJECTS = fft4gf.$(OBJEXT)
lib4gf_a_OBJECTS = $(nodist_lib4gf_a_OBJECTS)
lib8gf_a_AR = $(AR) cru
lib8gf_a_LIBADD =
nodist_lib8gf_a_OBJECTS = fft8gf.$(OBJEXT)
lib8gf_a_OBJECTS = $(nodist_lib8gf_a_OBJECTS)
libsg2df_a_AR = $(AR) cru
libsg2df_a_LIBADD =
nodist_libsg2df_a_OBJECTS = fftsgf.$(OBJEXT) fftsg2df.$(OBJEXT)
libsg2df_a_OBJECTS = $(nodist_libsg2df_a_OBJECTS)
libsg3df_a_AR = $(AR) cru
libsg3df_a_LIBADD =
nodist_libsg3df_a_OBJECTS = fftsgf.$(OBJEXT) fftsg3df.$(OBJEXT)
libsg3df_a_OBJECTS = $(nodist_libsg3df_a_OBJECTS)
libsgf_a_AR = $(AR) cru
libsgf_a_LIBADD =
nodist_libsgf_a_OBJECTS = fftsgf.$(OBJEXT)
libsgf_a_OBJECTS = $(nodist_libsgf_a_OBJECTS)
@DOUBLE_FALSE@@HAVE_F77_TRUE@noinst_PROGRAMS = doit_sg$(EXEEXT) \
@DOUBLE_FALSE@@HAVE_F77_TRUE@	doit_8g$(EXEEXT) doit_4g$(EXEEXT) \
@DOUBLE_FALSE@@HAVE_F77_TRUE@	doit_sg2d$(EXEEXT) \
@DOUBLE_FALSE@@HAVE_F77_TRUE@	doit_4f2d$(EXEEXT) \
@DOUBLE_FALSE@@HAVE_F77_TRUE@	doit_sg3d$(EXEEXT)
@DOUBLE_FALSE@@HAVE_F77_FALSE@noinst_PROGRAMS = doit_sg$(EXEEXT) \
@DOUBLE_FALSE@@HAVE_F77_FALSE@	doit_8g$(EXEEXT) doit_4g$(EXEEXT) \
@DOUBLE_FALSE@@HAVE_F77_FALSE@	doit_sg2d$(EXEEXT) \
@DOUBLE_FALSE@@HAVE_F77_FALSE@	doit_4f2d$(EXEEXT) \
@DOUBLE_FALSE@@HAVE_F77_FALSE@	doit_sg3d$(EXEEXT)
@DOUBLE_TRUE@@HAVE_F77_TRUE@noinst_PROGRAMS = doit_sg$(EXEEXT) \
@DOUBLE_TRUE@@HAVE_F77_TRUE@	doit_8g$(EXEEXT) doit_4g$(EXEEXT) \
@DOUBLE_TRUE@@HAVE_F77_TRUE@	doit_sg2d$(EXEEXT) \
@DOUBLE_TRUE@@HAVE_F77_TRUE@	doit_4f2d$(EXEEXT) \
@DOUBLE_TRUE@@HAVE_F77_TRUE@	doit_sg3d$(EXEEXT) \
@DOUBLE_TRUE@@HAVE_F77_TRUE@	doit_8gf$(EXEEXT) doit_4gf$(EXEEXT) \
@DOUBLE_TRUE@@HAVE_F77_TRUE@	doit_sgf$(EXEEXT) \
@DOUBLE_TRUE@@HAVE_F77_TRUE@	doit_sg2df$(EXEEXT) \
@DOUBLE_TRUE@@HAVE_F77_TRUE@	doit_4f2df$(EXEEXT) \
@DOUBLE_TRUE@@HAVE_F77_TRUE@	doit_sg3df$(EXEEXT)
@DOUBLE_TRUE@@HAVE_F77_FALSE@noinst_PROGRAMS = doit_sg$(EXEEXT) \
@DOUBLE_TRUE@@HAVE_F77_FALSE@	doit_8g$(EXEEXT) doit_4g$(EXEEXT) \
@DOUBLE_TRUE@@HAVE_F77_FALSE@	doit_sg2d$(EXEEXT) \
@DOUBLE_TRUE@@HAVE_F77_FALSE@	doit_4f2d$(EXEEXT) \
@DOUBLE_TRUE@@HAVE_F77_FALSE@	doit_sg3d$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)

am_doit_4f2d_OBJECTS = doit_4f2d.$(OBJEXT)
nodist_doit_4f2d_OBJECTS = fft4f2d.$(OBJEXT)
doit_4f2d_OBJECTS = $(am_doit_4f2d_OBJECTS) $(nodist_doit_4f2d_OBJECTS)
doit_4f2d_DEPENDENCIES = ${top_builddir}/libbench/libbench.a
doit_4f2d_LDFLAGS =
am_doit_4f2df_OBJECTS = doit_4f2df.$(OBJEXT)
doit_4f2df_OBJECTS = $(am_doit_4f2df_OBJECTS)
doit_4f2df_DEPENDENCIES = lib4f2df.a ${top_builddir}/libbench/libbench.a
doit_4f2df_LDFLAGS =
am_doit_4g_OBJECTS = doit_4g.$(OBJEXT)
nodist_doit_4g_OBJECTS = fft4g.$(OBJEXT)
doit_4g_OBJECTS = $(am_doit_4g_OBJECTS) $(nodist_doit_4g_OBJECTS)
doit_4g_DEPENDENCIES = ${top_builddir}/libbench/libbench.a
doit_4g_LDFLAGS =
am_doit_4gf_OBJECTS = doit_4gf.$(OBJEXT)
doit_4gf_OBJECTS = $(am_doit_4gf_OBJECTS)
doit_4gf_DEPENDENCIES = lib4gf.a ${top_builddir}/libbench/libbench.a
doit_4gf_LDFLAGS =
am_doit_8g_OBJECTS = doit_8g.$(OBJEXT)
nodist_doit_8g_OBJECTS = fft8g.$(OBJEXT)
doit_8g_OBJECTS = $(am_doit_8g_OBJECTS) $(nodist_doit_8g_OBJECTS)
doit_8g_DEPENDENCIES = ${top_builddir}/libbench/libbench.a
doit_8g_LDFLAGS =
am_doit_8gf_OBJECTS = doit_8gf.$(OBJEXT)
doit_8gf_OBJECTS = $(am_doit_8gf_OBJECTS)
doit_8gf_DEPENDENCIES = lib8gf.a ${top_builddir}/libbench/libbench.a
doit_8gf_LDFLAGS =
am_doit_sg_OBJECTS = doit_sg.$(OBJEXT)
nodist_doit_sg_OBJECTS = fftsg.$(OBJEXT)
doit_sg_OBJECTS = $(am_doit_sg_OBJECTS) $(nodist_doit_sg_OBJECTS)
doit_sg_DEPENDENCIES = ${top_builddir}/libbench/libbench.a
doit_sg_LDFLAGS =
am_doit_sg2d_OBJECTS = doit_sg2d.$(OBJEXT)
nodist_doit_sg2d_OBJECTS = fftsg.$(OBJEXT) fftsg2d.$(OBJEXT)
doit_sg2d_OBJECTS = $(am_doit_sg2d_OBJECTS) $(nodist_doit_sg2d_OBJECTS)
doit_sg2d_DEPENDENCIES = ${top_builddir}/libbench/libbench.a
doit_sg2d_LDFLAGS =
am_doit_sg2df_OBJECTS = doit_sg2df.$(OBJEXT)
doit_sg2df_OBJECTS = $(am_doit_sg2df_OBJECTS)
doit_sg2df_DEPENDENCIES = libsg2df.a ${top_builddir}/libbench/libbench.a
doit_sg2df_LDFLAGS =
am_doit_sg3d_OBJECTS = doit_sg3d.$(OBJEXT)
nodist_doit_sg3d_OBJECTS = fftsg.$(OBJEXT) fftsg3d.$(OBJEXT)
doit_sg3d_OBJECTS = $(am_doit_sg3d_OBJECTS) $(nodist_doit_sg3d_OBJECTS)
doit_sg3d_DEPENDENCIES = ${top_builddir}/libbench/libbench.a
doit_sg3d_LDFLAGS =
am_doit_sg3df_OBJECTS = doit_sg3df.$(OBJEXT)
doit_sg3df_OBJECTS = $(am_doit_sg3df_OBJECTS)
doit_sg3df_DEPENDENCIES = libsg3df.a ${top_builddir}/libbench/libbench.a
doit_sg3df_LDFLAGS =
am_doit_sgf_OBJECTS = doit_sgf.$(OBJEXT)
doit_sgf_OBJECTS = $(am_doit_sgf_OBJECTS)
doit_sgf_DEPENDENCIES = libsgf.a ${top_builddir}/libbench/libbench.a
doit_sgf_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/doit_4f2d.Po \
@AMDEP_TRUE@	./$(DEPDIR)/doit_4f2df.Po ./$(DEPDIR)/doit_4g.Po \
@AMDEP_TRUE@	./$(DEPDIR)/doit_4gf.Po ./$(DEPDIR)/doit_8g.Po \
@AMDEP_TRUE@	./$(DEPDIR)/doit_8gf.Po ./$(DEPDIR)/doit_sg.Po \
@AMDEP_TRUE@	./$(DEPDIR)/doit_sg2d.Po ./$(DEPDIR)/doit_sg2df.Po \
@AMDEP_TRUE@	./$(DEPDIR)/doit_sg3d.Po ./$(DEPDIR)/doit_sg3df.Po \
@AMDEP_TRUE@	./$(DEPDIR)/doit_sgf.Po ./$(DEPDIR)/fft4f2d.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fft4g.Po ./$(DEPDIR)/fft8g.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fftsg.Po ./$(DEPDIR)/fftsg2d.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fftsg3d.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
F77LD = $(F77)
F77LINK = $(F77LD) $(AM_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(doit_4f2d_SOURCES) $(doit_4f2df_SOURCES) \
	$(doit_4g_SOURCES) $(doit_4gf_SOURCES) $(doit_8g_SOURCES) \
	$(doit_8gf_SOURCES) $(doit_sg_SOURCES) $(doit_sg2d_SOURCES) \
	$(doit_sg2df_SOURCES) $(doit_sg3d_SOURCES) \
	$(doit_sg3df_SOURCES) $(doit_sgf_SOURCES)
DIST_COMMON = $(srcdir)/../Makefile.common Makefile.am Makefile.in
SOURCES = $(nodist_lib4f2df_a_SOURCES) $(nodist_lib4gf_a_SOURCES) $(nodist_lib8gf_a_SOURCES) $(nodist_libsg2df_a_SOURCES) $(nodist_libsg3df_a_SOURCES) $(nodist_libsgf_a_SOURCES) $(doit_4f2d_SOURCES) $(nodist_doit_4f2d_SOURCES) $(doit_4f2df_SOURCES) $(doit_4g_SOURCES) $(nodist_doit_4g_SOURCES) $(doit_4gf_SOURCES) $(doit_8g_SOURCES) $(nodist_doit_8g_SOURCES) $(doit_8gf_SOURCES) $(doit_sg_SOURCES) $(nodist_doit_sg_SOURCES) $(doit_sg2d_SOURCES) $(nodist_doit_sg2d_SOURCES) $(doit_sg2df_SOURCES) $(doit_sg3d_SOURCES) $(nodist_doit_sg3d_SOURCES) $(doit_sg3df_SOURCES) $(doit_sgf_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .f .o .obj
$(srcdir)/Makefile.in:  Makefile.am $(srcdir)/../Makefile.common $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  benchees/ooura/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

AR = ar

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
lib4f2df.a: $(lib4f2df_a_OBJECTS) $(lib4f2df_a_DEPENDENCIES) 
	-rm -f lib4f2df.a
	$(lib4f2df_a_AR) lib4f2df.a $(lib4f2df_a_OBJECTS) $(lib4f2df_a_LIBADD)
	$(RANLIB) lib4f2df.a
lib4gf.a: $(lib4gf_a_OBJECTS) $(lib4gf_a_DEPENDENCIES) 
	-rm -f lib4gf.a
	$(lib4gf_a_AR) lib4gf.a $(lib4gf_a_OBJECTS) $(lib4gf_a_LIBADD)
	$(RANLIB) lib4gf.a
lib8gf.a: $(lib8gf_a_OBJECTS) $(lib8gf_a_DEPENDENCIES) 
	-rm -f lib8gf.a
	$(lib8gf_a_AR) lib8gf.a $(lib8gf_a_OBJECTS) $(lib8gf_a_LIBADD)
	$(RANLIB) lib8gf.a
libsg2df.a: $(libsg2df_a_OBJECTS) $(libsg2df_a_DEPENDENCIES) 
	-rm -f libsg2df.a
	$(libsg2df_a_AR) libsg2df.a $(libsg2df_a_OBJECTS) $(libsg2df_a_LIBADD)
	$(RANLIB) libsg2df.a
libsg3df.a: $(libsg3df_a_OBJECTS) $(libsg3df_a_DEPENDENCIES) 
	-rm -f libsg3df.a
	$(libsg3df_a_AR) libsg3df.a $(libsg3df_a_OBJECTS) $(libsg3df_a_LIBADD)
	$(RANLIB) libsg3df.a
libsgf.a: $(libsgf_a_OBJECTS) $(libsgf_a_DEPENDENCIES) 
	-rm -f libsgf.a
	$(libsgf_a_AR) libsgf.a $(libsgf_a_OBJECTS) $(libsgf_a_LIBADD)
	$(RANLIB) libsgf.a

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
doit_4f2d$(EXEEXT): $(doit_4f2d_OBJECTS) $(doit_4f2d_DEPENDENCIES) 
	@rm -f doit_4f2d$(EXEEXT)
	$(LINK) $(doit_4f2d_LDFLAGS) $(doit_4f2d_OBJECTS) $(doit_4f2d_LDADD) $(LIBS)
doit_4f2df$(EXEEXT): $(doit_4f2df_OBJECTS) $(doit_4f2df_DEPENDENCIES) 
	@rm -f doit_4f2df$(EXEEXT)
	$(LINK) $(doit_4f2df_LDFLAGS) $(doit_4f2df_OBJECTS) $(doit_4f2df_LDADD) $(LIBS)
doit_4g$(EXEEXT): $(doit_4g_OBJECTS) $(doit_4g_DEPENDENCIES) 
	@rm -f doit_4g$(EXEEXT)
	$(LINK) $(doit_4g_LDFLAGS) $(doit_4g_OBJECTS) $(doit_4g_LDADD) $(LIBS)
doit_4gf$(EXEEXT): $(doit_4gf_OBJECTS) $(doit_4gf_DEPENDENCIES) 
	@rm -f doit_4gf$(EXEEXT)
	$(LINK) $(doit_4gf_LDFLAGS) $(doit_4gf_OBJECTS) $(doit_4gf_LDADD) $(LIBS)
doit_8g$(EXEEXT): $(doit_8g_OBJECTS) $(doit_8g_DEPENDENCIES) 
	@rm -f doit_8g$(EXEEXT)
	$(LINK) $(doit_8g_LDFLAGS) $(doit_8g_OBJECTS) $(doit_8g_LDADD) $(LIBS)
doit_8gf$(EXEEXT): $(doit_8gf_OBJECTS) $(doit_8gf_DEPENDENCIES) 
	@rm -f doit_8gf$(EXEEXT)
	$(LINK) $(doit_8gf_LDFLAGS) $(doit_8gf_OBJECTS) $(doit_8gf_LDADD) $(LIBS)
doit_sg$(EXEEXT): $(doit_sg_OBJECTS) $(doit_sg_DEPENDENCIES) 
	@rm -f doit_sg$(EXEEXT)
	$(LINK) $(doit_sg_LDFLAGS) $(doit_sg_OBJECTS) $(doit_sg_LDADD) $(LIBS)
doit_sg2d$(EXEEXT): $(doit_sg2d_OBJECTS) $(doit_sg2d_DEPENDENCIES) 
	@rm -f doit_sg2d$(EXEEXT)
	$(LINK) $(doit_sg2d_LDFLAGS) $(doit_sg2d_OBJECTS) $(doit_sg2d_LDADD) $(LIBS)
doit_sg2df$(EXEEXT): $(doit_sg2df_OBJECTS) $(doit_sg2df_DEPENDENCIES) 
	@rm -f doit_sg2df$(EXEEXT)
	$(LINK) $(doit_sg2df_LDFLAGS) $(doit_sg2df_OBJECTS) $(doit_sg2df_LDADD) $(LIBS)
doit_sg3d$(EXEEXT): $(doit_sg3d_OBJECTS) $(doit_sg3d_DEPENDENCIES) 
	@rm -f doit_sg3d$(EXEEXT)
	$(LINK) $(doit_sg3d_LDFLAGS) $(doit_sg3d_OBJECTS) $(doit_sg3d_LDADD) $(LIBS)
doit_sg3df$(EXEEXT): $(doit_sg3df_OBJECTS) $(doit_sg3df_DEPENDENCIES) 
	@rm -f doit_sg3df$(EXEEXT)
	$(LINK) $(doit_sg3df_LDFLAGS) $(doit_sg3df_OBJECTS) $(doit_sg3df_LDADD) $(LIBS)
doit_sgf$(EXEEXT): $(doit_sgf_OBJECTS) $(doit_sgf_DEPENDENCIES) 
	@rm -f doit_sgf$(EXEEXT)
	$(LINK) $(doit_sgf_LDFLAGS) $(doit_sgf_OBJECTS) $(doit_sgf_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/doit_4f2d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/doit_4f2df.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/doit_4g.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/doit_4gf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/doit_8g.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/doit_8gf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/doit_sg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/doit_sg2d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/doit_sg2df.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/doit_sg3d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/doit_sg3df.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/doit_sgf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fft4f2d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fft4g.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fft8g.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fftsg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fftsg2d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fftsg3d.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCC_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCC_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCC_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
@am__fastdepCC_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

fft4f2d.o: $(PKG2)/fft4f2d.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fft4f2d.o -MD -MP -MF "$(DEPDIR)/fft4f2d.Tpo" \
@am__fastdepCC_TRUE@	  -c -o fft4f2d.o `test -f '$(PKG2)/fft4f2d.c' || echo '$(srcdir)/'`$(PKG2)/fft4f2d.c; \
@am__fastdepCC_TRUE@	then mv "$(DEPDIR)/fft4f2d.Tpo" "$(DEPDIR)/fft4f2d.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/fft4f2d.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(PKG2)/fft4f2d.c' object='fft4f2d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/fft4f2d.Po' tmpdepfile='$(DEPDIR)/fft4f2d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fft4f2d.o `test -f '$(PKG2)/fft4f2d.c' || echo '$(srcdir)/'`$(PKG2)/fft4f2d.c

fft4f2d.obj: $(PKG2)/fft4f2d.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fft4f2d.obj -MD -MP -MF "$(DEPDIR)/fft4f2d.Tpo" \
@am__fastdepCC_TRUE@	  -c -o fft4f2d.obj `if test -f '$(PKG2)/fft4f2d.c'; then $(CYGPATH_W) '$(PKG2)/fft4f2d.c'; else $(CYGPATH_W) '$(srcdir)/$(PKG2)/fft4f2d.c'; fi`; \
@am__fastdepCC_TRUE@	then mv "$(DEPDIR)/fft4f2d.Tpo" "$(DEPDIR)/fft4f2d.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/fft4f2d.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(PKG2)/fft4f2d.c' object='fft4f2d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/fft4f2d.Po' tmpdepfile='$(DEPDIR)/fft4f2d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fft4f2d.obj `if test -f '$(PKG2)/fft4f2d.c'; then $(CYGPATH_W) '$(PKG2)/fft4f2d.c'; else $(CYGPATH_W) '$(srcdir)/$(PKG2)/fft4f2d.c'; fi`

fft4g.o: $(PKG)/fft4g.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fft4g.o -MD -MP -MF "$(DEPDIR)/fft4g.Tpo" \
@am__fastdepCC_TRUE@	  -c -o fft4g.o `test -f '$(PKG)/fft4g.c' || echo '$(srcdir)/'`$(PKG)/fft4g.c; \
@am__fastdepCC_TRUE@	then mv "$(DEPDIR)/fft4g.Tpo" "$(DEPDIR)/fft4g.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/fft4g.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(PKG)/fft4g.c' object='fft4g.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/fft4g.Po' tmpdepfile='$(DEPDIR)/fft4g.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fft4g.o `test -f '$(PKG)/fft4g.c' || echo '$(srcdir)/'`$(PKG)/fft4g.c

fft4g.obj: $(PKG)/fft4g.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fft4g.obj -MD -MP -MF "$(DEPDIR)/fft4g.Tpo" \
@am__fastdepCC_TRUE@	  -c -o fft4g.obj `if test -f '$(PKG)/fft4g.c'; then $(CYGPATH_W) '$(PKG)/fft4g.c'; else $(CYGPATH_W) '$(srcdir)/$(PKG)/fft4g.c'; fi`; \
@am__fastdepCC_TRUE@	then mv "$(DEPDIR)/fft4g.Tpo" "$(DEPDIR)/fft4g.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/fft4g.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(PKG)/fft4g.c' object='fft4g.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/fft4g.Po' tmpdepfile='$(DEPDIR)/fft4g.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fft4g.obj `if test -f '$(PKG)/fft4g.c'; then $(CYGPATH_W) '$(PKG)/fft4g.c'; else $(CYGPATH_W) '$(srcdir)/$(PKG)/fft4g.c'; fi`

fft8g.o: $(PKG)/fft8g.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fft8g.o -MD -MP -MF "$(DEPDIR)/fft8g.Tpo" \
@am__fastdepCC_TRUE@	  -c -o fft8g.o `test -f '$(PKG)/fft8g.c' || echo '$(srcdir)/'`$(PKG)/fft8g.c; \
@am__fastdepCC_TRUE@	then mv "$(DEPDIR)/fft8g.Tpo" "$(DEPDIR)/fft8g.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/fft8g.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(PKG)/fft8g.c' object='fft8g.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/fft8g.Po' tmpdepfile='$(DEPDIR)/fft8g.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fft8g.o `test -f '$(PKG)/fft8g.c' || echo '$(srcdir)/'`$(PKG)/fft8g.c

fft8g.obj: $(PKG)/fft8g.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fft8g.obj -MD -MP -MF "$(DEPDIR)/fft8g.Tpo" \
@am__fastdepCC_TRUE@	  -c -o fft8g.obj `if test -f '$(PKG)/fft8g.c'; then $(CYGPATH_W) '$(PKG)/fft8g.c'; else $(CYGPATH_W) '$(srcdir)/$(PKG)/fft8g.c'; fi`; \
@am__fastdepCC_TRUE@	then mv "$(DEPDIR)/fft8g.Tpo" "$(DEPDIR)/fft8g.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/fft8g.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(PKG)/fft8g.c' object='fft8g.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/fft8g.Po' tmpdepfile='$(DEPDIR)/fft8g.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fft8g.obj `if test -f '$(PKG)/fft8g.c'; then $(CYGPATH_W) '$(PKG)/fft8g.c'; else $(CYGPATH_W) '$(srcdir)/$(PKG)/fft8g.c'; fi`

fftsg.o: $(PKG)/fftsg.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fftsg.o -MD -MP -MF "$(DEPDIR)/fftsg.Tpo" \
@am__fastdepCC_TRUE@	  -c -o fftsg.o `test -f '$(PKG)/fftsg.c' || echo '$(srcdir)/'`$(PKG)/fftsg.c; \
@am__fastdepCC_TRUE@	then mv "$(DEPDIR)/fftsg.Tpo" "$(DEPDIR)/fftsg.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/fftsg.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(PKG)/fftsg.c' object='fftsg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/fftsg.Po' tmpdepfile='$(DEPDIR)/fftsg.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fftsg.o `test -f '$(PKG)/fftsg.c' || echo '$(srcdir)/'`$(PKG)/fftsg.c

fftsg.obj: $(PKG)/fftsg.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fftsg.obj -MD -MP -MF "$(DEPDIR)/fftsg.Tpo" \
@am__fastdepCC_TRUE@	  -c -o fftsg.obj `if test -f '$(PKG)/fftsg.c'; then $(CYGPATH_W) '$(PKG)/fftsg.c'; else $(CYGPATH_W) '$(srcdir)/$(PKG)/fftsg.c'; fi`; \
@am__fastdepCC_TRUE@	then mv "$(DEPDIR)/fftsg.Tpo" "$(DEPDIR)/fftsg.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/fftsg.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(PKG)/fftsg.c' object='fftsg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/fftsg.Po' tmpdepfile='$(DEPDIR)/fftsg.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fftsg.obj `if test -f '$(PKG)/fftsg.c'; then $(CYGPATH_W) '$(PKG)/fftsg.c'; else $(CYGPATH_W) '$(srcdir)/$(PKG)/fftsg.c'; fi`

fftsg2d.o: $(PKG2)/fftsg2d.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fftsg2d.o -MD -MP -MF "$(DEPDIR)/fftsg2d.Tpo" \
@am__fastdepCC_TRUE@	  -c -o fftsg2d.o `test -f '$(PKG2)/fftsg2d.c' || echo '$(srcdir)/'`$(PKG2)/fftsg2d.c; \
@am__fastdepCC_TRUE@	then mv "$(DEPDIR)/fftsg2d.Tpo" "$(DEPDIR)/fftsg2d.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/fftsg2d.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(PKG2)/fftsg2d.c' object='fftsg2d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/fftsg2d.Po' tmpdepfile='$(DEPDIR)/fftsg2d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fftsg2d.o `test -f '$(PKG2)/fftsg2d.c' || echo '$(srcdir)/'`$(PKG2)/fftsg2d.c

fftsg2d.obj: $(PKG2)/fftsg2d.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fftsg2d.obj -MD -MP -MF "$(DEPDIR)/fftsg2d.Tpo" \
@am__fastdepCC_TRUE@	  -c -o fftsg2d.obj `if test -f '$(PKG2)/fftsg2d.c'; then $(CYGPATH_W) '$(PKG2)/fftsg2d.c'; else $(CYGPATH_W) '$(srcdir)/$(PKG2)/fftsg2d.c'; fi`; \
@am__fastdepCC_TRUE@	then mv "$(DEPDIR)/fftsg2d.Tpo" "$(DEPDIR)/fftsg2d.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/fftsg2d.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(PKG2)/fftsg2d.c' object='fftsg2d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/fftsg2d.Po' tmpdepfile='$(DEPDIR)/fftsg2d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fftsg2d.obj `if test -f '$(PKG2)/fftsg2d.c'; then $(CYGPATH_W) '$(PKG2)/fftsg2d.c'; else $(CYGPATH_W) '$(srcdir)/$(PKG2)/fftsg2d.c'; fi`

fftsg3d.o: $(PKG2)/fftsg3d.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fftsg3d.o -MD -MP -MF "$(DEPDIR)/fftsg3d.Tpo" \
@am__fastdepCC_TRUE@	  -c -o fftsg3d.o `test -f '$(PKG2)/fftsg3d.c' || echo '$(srcdir)/'`$(PKG2)/fftsg3d.c; \
@am__fastdepCC_TRUE@	then mv "$(DEPDIR)/fftsg3d.Tpo" "$(DEPDIR)/fftsg3d.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/fftsg3d.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(PKG2)/fftsg3d.c' object='fftsg3d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/fftsg3d.Po' tmpdepfile='$(DEPDIR)/fftsg3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fftsg3d.o `test -f '$(PKG2)/fftsg3d.c' || echo '$(srcdir)/'`$(PKG2)/fftsg3d.c

fftsg3d.obj: $(PKG2)/fftsg3d.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fftsg3d.obj -MD -MP -MF "$(DEPDIR)/fftsg3d.Tpo" \
@am__fastdepCC_TRUE@	  -c -o fftsg3d.obj `if test -f '$(PKG2)/fftsg3d.c'; then $(CYGPATH_W) '$(PKG2)/fftsg3d.c'; else $(CYGPATH_W) '$(srcdir)/$(PKG2)/fftsg3d.c'; fi`; \
@am__fastdepCC_TRUE@	then mv "$(DEPDIR)/fftsg3d.Tpo" "$(DEPDIR)/fftsg3d.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/fftsg3d.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(PKG2)/fftsg3d.c' object='fftsg3d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/fftsg3d.Po' tmpdepfile='$(DEPDIR)/fftsg3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fftsg3d.obj `if test -f '$(PKG2)/fftsg3d.c'; then $(CYGPATH_W) '$(PKG2)/fftsg3d.c'; else $(CYGPATH_W) '$(srcdir)/$(PKG2)/fftsg3d.c'; fi`

.f.o:
	$(F77COMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.f.obj:
	$(F77COMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	$(mkinstalldirs) $(distdir)/./..
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-local clean-noinstLIBRARIES \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-local distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am check-local clean \
	clean-generic clean-local clean-noinstLIBRARIES \
	clean-noinstPROGRAMS ctags distclean distclean-compile \
	distclean-depend distclean-generic distclean-local \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am

doit_sg.o: doit-doc.h doit.c
doit_8g.o: doit-doc.h doit.c
doit_4g.o: doit-doc.h doit.c
doit_sgf.o: doit-doc.h doit.c
doit_8gf.o: doit-doc.h doit.c
doit_4gf.o: doit-doc.h doit.c
doit_sg2d.o: doit-doc.h doit2d.c
doit_sg2df.o: doit-doc.h doit2d.c
doit_4f2d.o: doit-doc.h doit2d.c
doit_4f2df.o: doit-doc.h doit2d.c
doit_sg3d.o: doit-doc.h doit3d.c
doit_sg3df.o: doit-doc.h doit3d.c

# extract TARFILE
extract: $(TARFILE)
	(@GZIP@ -dc ${srcdir}/$(TARFILE) | @TAR@ xf -) && \
	echo timestamp >$@

# extract TARFILE in PKG directory
extract-mkdir: $(TARFILE)
	@MKDIR@ $(PKG) && \
        @GZIP@ -dc ${srcdir}/$(TARFILE) | (cd $(PKG); @TAR@ xf -) && \
	echo timestamp >$@

distclean-local:
	rm -rf extract extract-mkdir $(PKG) $(LOCAL_COPIES)
	rm -rf benchmark accuracy *.info *.speed *.accuracy

clean-local::
	rm -rf benchmark accuracy $(LOCAL_COPIES)

check-local: $(PRG)
	test -z "$(PRG)" || (for prog in `echo $(PRG)`; do	\
	  test ! -x $$prog || {					\
	  echo "Testing $$prog";				\
	  $(BENCHMARK) --verify-only `pwd`/$$prog || exit 1; }	\
	done)

fftinfo: $(PRG)
	test -z "$(PRG)" || (for prog in `echo $(PRG)`; do	\
	  test ! -x $$prog || {					\
	  echo "Querying $$prog";				\
	  time_min=`./$$prog --print-time-min`;			\
	  $(WRITEINFO) --time-min $$time_min `pwd`/$$prog  |	\
           tee $$prog.$(PRECISION).info; }			\
	done)
	echo done >$@

benchmark: $(PRG)
	test -z "$(PRG)" || (for prog in `echo $(PRG)`; do	\
	  test ! -x $$prog || {					\
	  echo "Benchmarking $$prog";				\
	  time_min=`./$$prog --print-time-min`;			\
	  $(WRITEINFO) --time-min $$time_min `pwd`/$$prog  |	\
           tee $$prog.$(PRECISION).info;			\
	  ($(BENCHMARK) --time-min $$time_min `pwd`/$$prog  |	\
           tee $$prog.$(PRECISION).speed); }			\
	done)
	echo done >$@

accuracy: $(PRG)
	test -z "$(PRG)" || (for prog in `echo $(PRG)`; do	\
	  test ! -x $$prog || {					\
	  echo "Benchmarking $$prog";				\
	  time_min=`./$$prog --print-time-min`;			\
	  ($(BENCHMARK) --accuracy `pwd`/$$prog  |              \
	    tee $$prog.$(PRECISION).accuracy); }                \
	done)
	echo done >$@

$(PKG)/fftsg.c $(PKG)/fft8g.c $(PKG)/fft4g.c: extract
$(PKG2)/fftsg2d.c $(PKG2)/fft4f2d.c $(PKG2)/fftsg3d.c: extract2

fftsgf.f: extract
	@CP@ -f $(PKG)/fftsg.f $@

fft8gf.f: extract
	@CP@ -f $(PKG)/fft8g.f $@

fft4gf.f: extract
	@CP@ -f $(PKG)/fft4g.f $@

fftsg2df.f: extract2
	@CP@ -f $(PKG2)/fftsg2d.f $@

fft4f2df.f: extract2
	@CP@ -f $(PKG2)/fft4f2d.f $@

fftsg3df.f: extract2
	@CP@ -f $(PKG2)/fftsg3d.f $@

# extract TARFILE2
extract2: $(TARFILE2)
	(@GZIP@ -dc ${srcdir}/$(TARFILE2) | @TAR@ xf -) && \
        echo timestamp >$@
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
